package com.mindtree.college;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.boot.test.web.server.LocalServerPort;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;

import com.mindtree.college.controller.CollegeController;
import com.mindtree.college.entity.College;
import com.mindtree.college.repository.CollegeRepository;
  



	@SpringBootTest
	@AutoConfigureMockMvc
	class MicroservicesCollegeApplicationTests {

		@LocalServerPort
	    private int port;
		
		
		@Autowired
		MockMvc mockMvc;
		
      @Autowired
	  CollegeController collegeController;
		
		@Autowired
		CollegeRepository collegeRepository;
		
		
		@BeforeEach
		void setup() {
			collegeRepository.deleteAll();
		}
		
		@Test
		void contextLoads() throws Exception {
			College college=new College();
		
			college.setCollegeName("PES");
			college.setTotalStudents(4);
			collegeRepository.save(college);
			String str="{\"id\":10,\"collegeName\":\"PES\",\"totalStudents\":4}";
			
			mockMvc.perform(get("http://localhost:8084/college/10")).andExpect(status().isOk())
			.andDo(print())
			.andExpect(content().string(str));
			
			mockMvc.perform(get("http://localhost:8084/college/10")).andExpect(status().isOk())
			.andDo(print())
			.andExpect(content().contentType(MediaType.APPLICATION_XML_VALUE)).andExpect(jsonPath("$.collegeName").value("PES"))
			.andExpect(jsonPath("$.totalStudents").value(4)).andExpect(jsonPath("$.id").value(10));
			
		}
		

}
